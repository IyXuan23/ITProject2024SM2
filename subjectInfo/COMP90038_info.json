{
    "subject name": "Algorithms and Complexity",
    "subject code": "COMP90038",
    "subject availability": [
        "Semester 1",
        "Semester 2"
    ],
    "overview": [],
    "aims": [
        "The aim of this subject is for students to develop familiarity and competence in assessing and designing computer programs for computational efficiency. Although computers manipulate data very quickly, to solve large-scale problems, we must design strategies so that the calculations combine effectively. Over the latter half of the 20th century, an elegant theory of computational efficiency developed. This subject introduces students to the fundamentals of this theory and to many of the classical algorithms and data structures that solve key computational questions. These questions include distance computations in networks, searching items in large collections, and sorting them in order.",
        ""
    ],
    "indicative content": [
        "Topics covered include complexity classes and asymptotic notation; empirical analysis of algorithms; abstract data types including queues, trees, priority queues and graphs; algorithmic techniques including brute force, divide-and-conquer, dynamic programming and greedy approaches; space and time trade-offs; and the theoretical limits of algorithm power."
    ],
    "intended learning outcomes": [
        "Design, manipulate and reason about a variety of techniques for solving sorting, searching and graph problems",
        "Write efficient algorithms and data structures for a variety of fundamental problems",
        "Conduct formal reasoning about problem complexity and algorithmic efficiency",
        "Recognize the design techniques of standard algorithms, and apply these techniques to develop new computational solutions to problems"
    ],
    "pre-requisites": [
        {
            "option": "Option 1",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "additional pre-requisite": [
                "Permission of the coordinator is required prior to enrolling in this subject (some programming experience is required)"
            ]
        },
        {
            "option": "Option 2",
            "necessary pre-requisite": [
                [
                    "COMP90059"
                ]
            ],
            "one of pre-requisite": [],
            "additional pre-requisite": []
        },
        {
            "option": "Option 3",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "additional pre-requisite": [
                "Admission into or selection of one of the following:",
                "MC-SOFTENG Master of Software Engineering",
                "MC-IT Master of Information Technology",
                "MC-DATASC Master of Data Science",
                "GD-CS Graduate Diploma in Computer Science",
                "GD-DATASC Graduate Diploma in Data Science",
                "MC-DINFENG Master of Digital Infrastructure Engineering",
                "Software specialisation (formal) in the MC-ENG Master of Engineering",
                "Software with Business specialisation (formal) in the MC-ENG Master of Engineering"
            ]
        },
        {
            "option": "Option 4",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "additional pre-requisite": [
                "Students wanting to enrol in COMP90038 that have not met any of the above pre-requisites will need to complete an enrolment variation form and attach Subject Coordinator approval."
            ]
        }
    ],
    "corequisites": "None",
    "non-allowed subjects": [
        "COMP20003",
        "COMP20007"
    ],
    "assessments": [
        {
            "description": "Project work during semester due around weeks 7 and 11, addressing all Intended Learning Outcomes (ILOs) 1-4.. 30-36 hours (of work required)",
            "timing": "From Week 7 to Week 11",
            "percentage": "30%"
        },
        {
            "description": "10 weekly online quizzes, addressing ILOs 1 and 3.. 30 minutes (each)",
            "timing": "Throughout the teaching period",
            "percentage": "10%"
        },
        {
            "description": "A written closed book examination, addressing all Intended Learning Outcomes (ILOs) 1-4.. 3 hours. Hurdle requirement:. The examination is a hurdle and must be passed to pass the subject",
            "timing": "During the examination period",
            "percentage": "60%"
        }
    ],
    "dates and times": [
        {
            "Semester 1": [
                {
                    "Principal coordinator": "Junhao Gan"
                },
                {
                    "Mode of delivery": "On Campus (Parkville)"
                },
                {
                    "Contact hours": "36 hours, comprising of two 1-hour lectures and one 1-hour tutorial per week"
                },
                {
                    "Total time commitment": "200 hours"
                },
                {
                    "Teaching period": "26 February 2024 to 26 May 2024"
                },
                {
                    "Last self-enrol date": "8 March 2024"
                },
                {
                    "Census date": "3 April 2024"
                },
                {
                    "Last date to withdraw without fail": "3 May 2024"
                },
                {
                    "Assessment period ends": "21 June 2024"
                }
            ]
        },
        {
            "Semester 2": [
                {
                    "Principal coordinator": "Olya Ohrimenko"
                },
                {
                    "Mode of delivery": "On Campus (Parkville)"
                },
                {
                    "Contact hours": "36 hours, comprising of two 1-hour lectures and one 1-hour tutorial per week"
                },
                {
                    "Total time commitment": "200 hours"
                },
                {
                    "Teaching period": "22 July 2024 to 20 October 2024"
                },
                {
                    "Last self-enrol date": "2 August 2024"
                },
                {
                    "Census date": "2 September 2024"
                },
                {
                    "Last date to withdraw without fail": "20 September 2024"
                },
                {
                    "Assessment period ends": "15 November 2024"
                }
            ]
        }
    ],
    "contact information": [
        {
            "Semester 1": {
                "name": [
                    "Junhao Gan"
                ],
                "email": [
                    "junhao.gan@unimelb.edu.au"
                ]
            }
        },
        {
            "Semester 2": {
                "name": [
                    "Olya Ohrimenko"
                ],
                "email": [
                    "oohrimenko@unimelb.edu.au"
                ]
            }
        }
    ],
    "further info": {
        "Texts": [
            {
                "Prescribed texts": [
                    "A. Levitin, Introduction to the Design and Analysis of Algorithms, Pearson, 3rd edition, 2012"
                ]
            }
        ],
        "Subject notes": [
            "LEARNING AND TEACHING METHODS",
            "The subject involves two weekly one -hour lectures and one tutorial class. The lectures are a mix of direct delivery and interactive student problem solving. Although written assignments are submitted by students individually, in-plenum discussion of the problems is encouraged.",
            "INDICATIVE KEY LEARNING RESOURCES",
            "Students are provided with lecture slides, and links on the LMS to the in-house animated softwareAlgorithms in Action. The slides are integrated with a well-established textbook.",
            "CAREERS / INDUSTRY LINKS",
            "With Big Data at the forefront of modern computing solutions, industry is ever-more focused on efficient computational analysis methods. Software engineers, developers and data analysts will find not only the analysis techniques, but also the fundamental algorithmic design concepts, highly applicable to the handling of significant datasets. Building on an initial connection in a similar undergraduate offering, there is scope for industry liaison with this subject."
        ],
        "Related Handbook entries": [
            "This subject contributes to the following:"
        ],
        "Available through the Community Access Program": [
            {
                "About the Community Access Program (CAP)": [
                    "This subject is available through theCommunity Access Program(also called Single Subject Studies) which allows you to enrol in single subjects offered by the University of Melbourne, without the commitment required to complete a whole degree.",
                    "Entry requirements including prerequisites may apply. Please refer to theCAP applications pagefor further information."
                ]
            },
            {
                "Additional information for this subject": [
                    "Subject coordinator approval required",
                    "Subject coordinator approval required"
                ]
            }
        ],
        "Available to Study Abroad and/or Study Exchange Students": [
            "This subject is available to students studying at the University from eligible overseas institutions on exchange and study abroad. Students are required to satisfy any listed requirements, such as pre- and co-requisites, for enrolment in the subject."
        ]
    }
}