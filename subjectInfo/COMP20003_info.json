{
    "subject name": "Algorithms and Data Structures",
    "subject code": "COMP20003",
    "subject availability": [
        "Semester 2"
    ],
    "overview": [],
    "aims": [
        "Programmers can choose between several representations of data. These will have different strengths and weaknesses, and each will require its own set of algorithms. Students will be introduced to the most frequently used data structures and their associated algorithms. The emphasis will be on justification of algorithm correctness, on analysis of algorithm performance, and on choosing the right data structure for the problem at hand. Leading up to an exam with a programming component, quality implementation of algorithms and data structures is emphasized.",
        "This subject, or its cognate COMP20007 Design of Algorithms, is a prerequisite for many 300-level subjects in the Computing and Software Systems major.",
        ""
    ],
    "indicative content": [
        "Topics include: justification of algorithm correctness; asymptotic and empirical analysis of algorithm performance; algorithms for sorting and searching, including fundamental data structures such as trees and hash tables; and graph algorithms.",
        "Please view this video for further information:Algorithms and Data Structures"
    ],
    "pre-requisites": [
        {
            "option": "Option 1",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "alternate pre-requisite": [
                "Admission into the MC-SOFTENG Master of Software Engineering"
            ]
        },
        {
            "option": "Option 2",
            "necessary pre-requisite": [
                "A minimum of 25 credit points ofuniversity-level mathematics",
                "Please note, this rule is exclusive of MAST10012"
            ],
            "one of pre-requisite": [
                [
                    "COMP10002",
                    "COMP20005"
                ]
            ],
            "alternate pre-requisite": []
        },
        {
            "option": "Option 3",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "alternate pre-requisite": [
                "Students enrolling through VCE Algorithmics can take mathematics requirements concurrently. Please complete an Enrolment Assistance form, Coordinator approval is not required.",
                "Enrolment Assistance form"
            ]
        }
    ],
    "corequisites": "None",
    "non-allowed subjects": [
        "COMP20007",
        "COMP90038"
    ],
    "assessments": [
        {
            "description": "Programming assignment  1 - Group/Team of 2. 10 hours (of work required)",
            "timing": "From Week 3 to Week 4",
            "percentage": "10%"
        },
        {
            "description": "Programming assignment 2 - Individual. 20 hours (of work required)",
            "timing": "From Week 6 to Week 7",
            "percentage": "15%"
        },
        {
            "description": "Programming assignment 3 - Individual. 20 hours (of work required)",
            "timing": "From Week 11 to Week 12",
            "percentage": "15%"
        },
        {
            "description": "Weekly Tutorial Activities. 5 hours (of work required)",
            "timing": "Throughout the semester",
            "percentage": "5%"
        },
        {
            "description": "One mid-semester test. 30 minutes",
            "timing": "Week 8",
            "percentage": "10%"
        },
        {
            "description": "Closed Book Exam. 3 hours",
            "timing": "During the examination period",
            "percentage": "45%"
        }
    ],
    "dates and times": [
        {
            "Semester 2": [
                {
                    "Principal coordinator": "Nir Lipovetzky"
                },
                {
                    "Coordinator": "Lars Kulik"
                },
                {
                    "Mode of delivery": "On Campus (Parkville)"
                },
                {
                    "Contact hours": "48 hours, comprising of two 1-hour lectures and one 2-hour workshop per week"
                },
                {
                    "Total time commitment": "170 hours"
                },
                {
                    "Teaching period": "22 July 2024 to 20 October 2024"
                },
                {
                    "Last self-enrol date": "2 August 2024"
                },
                {
                    "Census date": "2 September 2024"
                },
                {
                    "Last date to withdraw without fail": "20 September 2024"
                },
                {
                    "Assessment period ends": "15 November 2024"
                }
            ]
        }
    ],
    "contact information": [
        {
            "Semester 2": {
                "name": [
                    "Nir Lipovetzky",
                    "Lars Kulik"
                ],
                "email": [
                    "nir.lipovetzky@unimelb.edu.au",
                    "lkulik@unimelb.edu.au"
                ]
            }
        }
    ],
    "further info": {
        "Texts": [
            {
                "Prescribed texts": [
                    "There are no specifically prescribed or recommended texts for this subject."
                ]
            }
        ],
        "Subject notes": [
            "LEARNING AND TEACHING METHODS",
            "This subject involves two 1-hour lectures and one 2-hour workshop each week. Although lectures are largely delivered directly based on the slides, often there are in-class discussions and development of computer code. The workshops are a blend of tutorial theory questions and implementation of algorithms and data structures in C.",
            "INDICATIVE KEY LEARNING RESOURCES",
            "Students are provided with lecture slides, and sample and scaffolding computer code in the C language.",
            "CAREERS / INDUSTRY LINKS",
            "With Big Data at the forefront of modern computing solutions, industry is ever-more focused on efficient computational analysis methods. Software engineers, developers and data analysts will find not only the analysis techniques, but also the fundamental algorithmic design concepts, highly applicable to the handling of significant datasets."
        ],
        "Related Handbook entries": [
            "This subject contributes to the following:"
        ],
        "Breadth options": [
            "This subject is available as breadth in the following courses:",
            [
                "Bachelor of Arts",
                "Bachelor of Commerce",
                "Bachelor of Design",
                "Bachelor of Environments",
                "Bachelor of Fine Arts (Acting)",
                "Bachelor of Fine Arts (Animation)",
                "Bachelor of Fine Arts (Dance)",
                "Bachelor of Fine Arts (Film and Television)",
                "Bachelor of Fine Arts (Music Theatre)",
                "Bachelor of Fine Arts (Production)",
                "Bachelor of Fine Arts (Screenwriting)",
                "Bachelor of Fine Arts (Theatre)",
                "Bachelor of Fine Arts (Visual Art)",
                "Bachelor of Music"
            ]
        ],
        "Available through the Community Access Program": [
            {
                "About the Community Access Program (CAP)": [
                    "This subject is available through theCommunity Access Program(also called Single Subject Studies) which allows you to enrol in single subjects offered by the University of Melbourne, without the commitment required to complete a whole degree.",
                    "Entry requirements including prerequisites may apply. Please refer to theCAP applications pagefor further information."
                ]
            }
        ],
        "Available to Study Abroad and/or Study Exchange Students": [
            "This subject is available to students studying at the University from eligible overseas institutions on exchange and study abroad. Students are required to satisfy any listed requirements, such as pre- and co-requisites, for enrolment in the subject."
        ]
    }
}