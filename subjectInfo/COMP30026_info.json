{
    "subject name": "Models of Computation",
    "subject code": "COMP30026",
    "subject availability": [
        "Semester 2"
    ],
    "overview": [],
    "aims": [
        "Formal logic and discrete mathematics provide the theoretical foundations for computer science. This subject uses logic and discrete mathematics to model the science of computing. It provides a grounding in the theories of logic, sets, relations, functions, automata, formal languages, and computability, providing concepts that underpin virtually all the practical tools contributed by the discipline, for automated storage, retrieval, manipulation and communication of data.INDICATIVE CONTENT",
        "Logic: Propositional and predicate logic, resolution proofs, mathematical proof",
        "Discrete mathematics: Sets, functions, relations, order, well-foundedness, induction and recursion",
        "Automata: Regular languages, finite-state automata, context-free grammars and languages, parsing",
        "Computability briefly: Turing machines, computability, decidability",
        "A functional programming language will be used to implement and illustrate concepts."
    ],
    "indicative content": [],
    "pre-requisites": [
        {
            "option": "Option 1",
            "necessary pre-requisite": [],
            "one of pre-requisite": [
                [
                    "COMP20003",
                    "COMP20007",
                    "COMP90038"
                ]
            ],
            "alternate pre-requisite": []
        },
        {
            "option": "Option 2",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "alternate pre-requisite": [
                "Admission into the GC-CS Graduate Certificate in Computer Science"
            ]
        },
        {
            "option": "Option 3",
            "necessary pre-requisite": [],
            "one of pre-requisite": [],
            "alternate pre-requisite": [
                "Admission into the Artificial Intelligence (100pt) specialisation (formal) in the MC-IT Master of Information Technology, Artificial Intelligence (150pt) specialisation (formal) in the MC-IT Master of Information Technology, Computing (100pt) specialisation (formal) in the MC-IT Master of Information Technology, Computing (150pt) specialisation (formal) in the MC-IT Master of Information Technology"
            ]
        }
    ],
    "corequisites": "None",
    "non-allowed subjects": [
        "COMP20004"
    ],
    "assessments": [
        {
            "description": "A written (800 - 1000 word) assignment, due around week 7, addressing Intended Learning Outcomes (ILO's) 1 and 2.. 12-15 hours (of work required)",
            "timing": "Week 7",
            "percentage": "12%"
        },
        {
            "description": "A written (800 - 1000 word) assignment, due around week 12, addressing ILO's 3, 4, 5 and 6.. 12-15 hours (of work required)",
            "timing": "Week 12",
            "percentage": "12%"
        },
        {
            "description": "Successful completion of at least 75% of worksheet exercises, delivered via an online learning platform (Grok).. 5-7 hours (of work required)",
            "timing": "",
            "percentage": "6%"
        },
        {
            "description": "A written closed book examination, addressing all ILO's.. 3 hours",
            "timing": "During the examination period",
            "percentage": "70%"
        }
    ],
    "dates and times": [
        {
            "Semester 2": [
                {
                    "Coordinator": "Mak Nazecic-Andrlon"
                },
                {
                    "Mode of delivery": "On Campus (Parkville)"
                },
                {
                    "Contact hours": "36 hours, comprising two 1-hour lectures and a one 1-hour tutorial per week"
                },
                {
                    "Total time commitment": "170 hours"
                },
                {
                    "Teaching period": "22 July 2024 to 20 October 2024"
                },
                {
                    "Last self-enrol date": "2 August 2024"
                },
                {
                    "Census date": "2 September 2024"
                },
                {
                    "Last date to withdraw without fail": "20 September 2024"
                },
                {
                    "Assessment period ends": "15 November 2024"
                }
            ]
        }
    ],
    "contact information": [
        {
            "Semester 2": {
                "name": [
                    "Mak Nazecic-Andrlon"
                ],
                "email": [
                    "mak.andrlon@unimelb.edu.au"
                ]
            }
        }
    ],
    "further info": {
        "Texts": [
            {
                "Prescribed texts": [
                    "There are no specifically prescribed or recommended texts for this subject."
                ]
            }
        ],
        "Subject notes": [
            "LEARNING AND TEACHING METHODS",
            "The subject involves two 1-hour lectures per week followed by one 2-hour tutorial. Weekly tutorial problems are assigned and discussed in class. Tutors may use tutorial time to demonstrate applications of the theory, such as SAT-solver use, logic programming, and parsing. Lectures and tutorials are designed to be interactive, and the written assignments are designed to be challenging, so as to generate discussion. Although written assignments are submitted by students individually, in-plenum discussion of the problems encouraged.",
            "INDICATIVE KEY LEARNING RESOURCES",
            "The subject uses online reading materials and offers access to visualisation tools (the JFLAP suite), an interactive learning platform (Grok), an online discussion forum, and advance access to all teaching materials, including slides used in lectures.",
            "CAREERS / INDUSTRY LINKS",
            "The subject is foundational. While the practice of computing changes fast, the theoretical underpinnings, and many of the basic concepts underlying computation, change only slowly. A foundation in logic and mathematics provides important conceptual tools that are used by theoreticians, computer scientists, and software engineering practitioners alike."
        ],
        "Related Handbook entries": [
            "This subject contributes to the following:"
        ],
        "Available through the Community Access Program": [
            {
                "About the Community Access Program (CAP)": [
                    "This subject is available through theCommunity Access Program(also called Single Subject Studies) which allows you to enrol in single subjects offered by the University of Melbourne, without the commitment required to complete a whole degree.",
                    "Entry requirements including prerequisites may apply. Please refer to theCAP applications pagefor further information."
                ]
            },
            {
                "Additional information for this subject": [
                    "Subject coordinator approval required",
                    "Subject coordinator approval required"
                ]
            }
        ],
        "Available to Study Abroad and/or Study Exchange Students": [
            "This subject is available to students studying at the University from eligible overseas institutions on exchange and study abroad. Students are required to satisfy any listed requirements, such as pre- and co-requisites, for enrolment in the subject."
        ]
    }
}